name: Build and Deploy Snapshot
on: [push]
permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # JDK 17 has a few failures so cannot yet enable for this module
        java_version: ['8', '11']
        os: ['ubuntu-20.04']
    env:
      JAVA_OPTS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1"
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas
        pip install numpy
    - run: sudo apt update
    - run: sudo apt install inotify-tools
    - run: inotifywait -mr /home/runner/work/jackson-databind/jackson-databind/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'optimizing-ci-builds'
    - run: touch starting_build_uses-checkout_34
    - run: rm starting_build_uses-checkout_34
    - uses: actions/checkout@v3
    - run: touch starting_build_SetupJDK_35
    - run: rm starting_build_SetupJDK_35
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java_version }}
        cache: 'maven'
        server-id: sonatype-nexus-snapshots
        server-username: CI_DEPLOY_USERNAME
        server-password: CI_DEPLOY_PASSWORD
        # See https://github.com/actions/setup-java/blob/v2/docs/advanced-usage.md#Publishing-using-Apache-Maven
        # gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
        # gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
    - run: touch starting_build_Build_47
    - run: rm starting_build_Build_47
    - name: Build
      run: ./mvnw -B -ff -ntp clean verify
    - run: touch starting_build_ExtractprojectMavenversion_49
    - run: rm starting_build_ExtractprojectMavenversion_49
    - name: Extract project Maven version
      id: projectVersion
      run: echo ::set-output name=version::$(./mvnw org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -DforceStdout -Dexpression=project.version -q)
    - run: touch starting_build_Deploysnapshot_52
    - run: rm starting_build_Deploysnapshot_52
    - name: Deploy snapshot
      env:
        CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
        CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
        # MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      run: ./mvnw -B -q -ff -DskipTests -ntp source:jar deploy
    - run: touch starting_build_Generatecodecoverage_59
    - run: rm starting_build_Generatecodecoverage_59
    - name: Generate code coverage
      run: ./mvnw -B -q -ff -ntp test
    - run: touch starting_build_Publishcodecoverage_62
    - run: rm starting_build_Publishcodecoverage_62
    - name: Publish code coverage
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./target/site/jacoco/jacoco.xml
        flags: unittests
    - run: touch starting_finished_finished_8979874
      if: always()
    - run: rm starting_finished_finished_8979874
      if: always()
    - name: rat check
      if: always()
      run: |
         if [ -f /home/runner/work/jackson-databind/jackson-databind/target/rat.txt ]; then cat /home/runner/work/jackson-databind/jackson-databind/target/rat.txt; fi
    - name: Check script file exists and execute
      if: always()
      run: |
        [ -f .github/workflows/script.py ] && python .github/workflows/script.py
        [ -f /home/runner/work/jackson-databind/jackson-databind/optimizing-ci-builds-ci-analysis/job.csv ] || mkdir -p /home/runner/work/jackson-databind/jackson-databind/optimizing-ci-builds-ci-analysis/; echo "${GITHUB_RUN_ID},${GITHUB_JOB},jackson-databind,${GITHUB_WORKFLOW}" > /home/runner/work/jackson-databind/jackson-databind/optimizing-ci-builds-ci-analysis/job.csv
    - name: Checkout to destination CI-analyzes repo
      uses: actions/checkout@v3
      if: always()
      with:
        path: jackson-databind
        ref: '1686785308-548a464'
        repository: 'UT-SE-Research/ci-analyzes'
        token: '${{ secrets.API_TOKEN_GITHUB }}'
        persist-credentials: true
    - name: Copy files to push to another directory
      if: always()
      run: |
        mkdir -p jackson-databind/jackson-databind/.github/workflows/main/build_java_version_${{ matrix.java_version }}_os_${{ matrix.os }}
        cp -rvT optimizing-ci-builds-ci-analysis jackson-databind/jackson-databind/.github/workflows/main/build_java_version_${{ matrix.java_version }}_os_${{ matrix.os }}
    - run: echo https://github.com/UT-SE-Research/ci-analyzes/tree/1686785308-548a464/jackson-databind/.github/workflows/main/build_java_version_${{ matrix.java_version }}_os_${{ matrix.os }}
    - name: Pushes analysis to another repository
      if: always()
      working-directory: jackson-databind
      run: |
        commit_message=$GITHUB_REPOSITORY@$GITHUB_WORKFLOW_SHA
        git config --global user.name 'UT-SE-Research'
        git config --global user.email '${{ secrets.EMAIL }}'
        git add .
        git commit -m $commit_message
        while ! git push origin 1686785308-548a464; do
          git pull --rebase origin 1686785308-548a464
          sleep $((RANDOM % 5 + 1))
        done
